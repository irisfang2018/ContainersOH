apiVersion: apps/v1
kind: Deployment
metadata:
  name: tripviewer-deployment
  namespace: web
  labels:
    deploy: tripviewer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tripviewer
  template:
    metadata:
      labels:
        app: tripviewer
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - image: "registryfxh8749.azurecr.io/tripviewer:1.0"
        imagePullPolicy: Always
        name: tripviewer
        # livenessProbe:
        #   httpGet:
        #     path: /api/tripviewer/healthcheck
        #     port: 80
        #   initialDelaySeconds: 10
        #   periodSeconds: 30
        # readinessProbe:
        #   httpGet:
        #     path: /api/tripviewer/healthcheck
        #     port: 80
        #   initialDelaySeconds: 5
        #   periodSeconds: 5
        ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
        env:
          - name: TRIPS_API_ENDPOINT
            value: 'http://trips-svc.api'
          - name: USERPROFILE_API_ENDPOINT
            value: 'http://user-svc.api'
          - name: WCF_ENDPOINT
            value: 'http://wcfsvc-svc.api'
          - name: BING_MAPS_KEY
            value: "Aj5lHDzdCgzQinbEYxyVbPYiOcMzRaZyLC1O_zM-k8ViwEzmusa287ZGlc9q8Qr"

        # envFrom:
        #   - secretRef:
        #       name: mydbsecrets

---
apiVersion: v1
kind: Service
metadata:
  name: tripviewer-svc
  namespace: web
spec:
  type: ClusterIP
  selector:
    app: tripviewer
  ports:
    - protocol: TCP
      name: tripviewer-http
      port: 80
      targetPort: 80
    - protocol: TCP
      name: tripviewer-https
      port: 443
      targetPort: 443
